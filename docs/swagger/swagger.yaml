openapi: 3.0.3
info:
  title: Oortfy API Gateway
  description: API Gateway for Oortfy microservices
  version: 1.0.0
servers:
  - url: /
paths:
  /scanjobmanager:
    get:
      summary: Proxy to scanjobmanager service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    post:
      summary: Proxy to scanjobmanager service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    put:
      summary: Proxy to scanjobmanager service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    delete:
      summary: Proxy to scanjobmanager service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    options:
      summary: CORS preflight
      responses:
        '204':
          description: No Content
  /project:
    get:
      summary: Proxy to project service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    post:
      summary: Proxy to project service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    put:
      summary: Proxy to project service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    delete:
      summary: Proxy to project service
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      responses:
        '200':
          description: Success
    options:
      summary: CORS preflight
      responses:
        '204':
          description: No Content
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  time:
                    type: string
                    format: date-time
  /test-ip:
    get:
      summary: Test endpoint for client IP and token detection
      responses:
        '200':
          description: Client IP and token info
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_ip:
                    type: string
                  remote_addr:
                    type: string
                  country:
                    type: string
                  headers:
                    type: object
                  query_parameters:
                    type: object
                  time:
                    type: string
                    format: date-time
                  auth_method:
                    type: string
securitySchemes:
  ApiKeyAuth:
    type: apiKey
          in: header
    name: x-api-key
  BearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    QueryTokenAuth:
      type: apiKey
      in: query
      name: token
      description: JWT token in query parameter (fallback authentication)
    QueryApiKeyAuth:
      type: apiKey
      in: query
      name: api_key
      description: API key in query parameter (fallback authentication)
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized: invalid token"
        status:
          type: integer
          format: int32
          example: 401 