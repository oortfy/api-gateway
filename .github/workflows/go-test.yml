name: Go Test

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          check-latest: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        check-latest: true
    
    - name: Check out code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify
      
    - name: Run vet
      run: go vet ./...
      
    - name: Run tests with race detection
      run: go test -race -v ./...
      
    - name: Run main test suite with coverage
      run: go test -v -coverprofile=coverage.out ./...

    - name: Run component-specific tests
      run: |
        make test-component-coverage || echo "Some tests may have been skipped"
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: |
          *.out
          *_coverage.html 